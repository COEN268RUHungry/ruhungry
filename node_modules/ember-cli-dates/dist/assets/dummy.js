eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/day-of-the-week.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/helpers\');\n    test(\'Ember CLI QUnit/helpers/day-of-the-week.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/helpers/day-of-the-week.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/day-of-the-week.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-ago-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/helpers\');\n    test(\'Ember CLI QUnit/helpers/time-ago-in-words.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/helpers/time-ago-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-ago-in-words.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-ahead-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/helpers\');\n    test(\'Ember CLI QUnit/helpers/time-ahead-in-words.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/helpers/time-ahead-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-ahead-in-words.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-delta-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/helpers\');\n    test(\'Ember CLI QUnit/helpers/time-delta-in-words.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/helpers/time-delta-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-delta-in-words.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/helpers\');\n    test(\'Ember CLI QUnit/helpers/time-format.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/helpers/time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/helpers/time-format.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/utils/time-locale.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/utils\');\n    test(\'Ember CLI QUnit/utils/time-locale.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/utils/time-locale.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/utils/time-locale.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/Ember CLI QUnit/utils/valid-args.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - Ember CLI QUnit/utils\');\n    test(\'Ember CLI QUnit/utils/valid-args.js should pass jshint\', function() { \n      ok(true, \'Ember CLI QUnit/utils/valid-args.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/Ember CLI QUnit/utils/valid-args.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"dummy\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=dummy/config/environment.js");

;eval("define(\"dummy/config/environments/development\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"dummy\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=dummy/config/environments/development.js");

;eval("define(\"dummy/config/environments/test\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"dummy\",\"environment\":\"test\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\"}};\n  });//# sourceURL=dummy/config/environments/test.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/helpers/day-of-the-week.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/helpers\');\n    test(\'ember-cli-dates/helpers/day-of-the-week.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/helpers/day-of-the-week.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/helpers/day-of-the-week.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-ago-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/helpers\');\n    test(\'ember-cli-dates/helpers/time-ago-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/helpers/time-ago-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-ago-in-words.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-ahead-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/helpers\');\n    test(\'ember-cli-dates/helpers/time-ahead-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/helpers/time-ahead-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-ahead-in-words.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-delta-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/helpers\');\n    test(\'ember-cli-dates/helpers/time-delta-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/helpers/time-delta-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-delta-in-words.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/helpers\');\n    test(\'ember-cli-dates/helpers/time-format.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/helpers/time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/helpers/time-format.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/utils/time-locale.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/utils\');\n    test(\'ember-cli-dates/utils/time-locale.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/utils/time-locale.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/utils/time-locale.jshint.js");

;eval("define(\"dummy/ember-cli-dates/tests/ember-cli-dates/utils/valid-args.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-dates/utils\');\n    test(\'ember-cli-dates/utils/valid-args.js should pass jshint\', function() { \n      ok(true, \'ember-cli-dates/utils/valid-args.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-dates/tests/ember-cli-dates/utils/valid-args.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/day-of-the-week.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/day-of-the-week.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/day-of-the-week.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/day-of-the-week.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/time-ago-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/time-ago-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/time-ago-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/time-ago-in-words.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/time-ahead-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/time-ahead-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/time-ahead-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/time-ahead-in-words.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/time-delta-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/time-delta-in-words.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/time-delta-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/time-delta-in-words.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/helpers/time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/helpers\');\n    test(\'ember-data/helpers/time-format.js should pass jshint\', function() { \n      ok(true, \'ember-data/helpers/time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/helpers/time-format.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/utils/time-locale.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/utils\');\n    test(\'ember-data/utils/time-locale.js should pass jshint\', function() { \n      ok(true, \'ember-data/utils/time-locale.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/utils/time-locale.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/utils/valid-args.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/utils\');\n    test(\'ember-data/utils/valid-args.js should pass jshint\', function() { \n      ok(true, \'ember-data/utils/valid-args.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/utils/valid-args.jshint.js");

;eval("define(\"dummy/initializers/ember-cli-dates\", \n  [\"ember\",\"ember-cli-dates/helpers/time-format\",\"ember-cli-dates/helpers/time-ago-in-words\",\"ember-cli-dates/helpers/day-of-the-week\",\"ember-cli-dates/helpers/time-ahead-in-words\",\"ember-cli-dates/helpers/time-delta-in-words\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__, __dependency6__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var timeFormat = __dependency2__.timeFormat;\n    var timeAgoInWords = __dependency3__.timeAgoInWords;\n    var dayOfTheWeek = __dependency4__.dayOfTheWeek;\n    var timeAheadInWords = __dependency5__.timeAheadInWords;\n    var timeDeltaInWords = __dependency6__.timeDeltaInWords;\n\n    var initialize = function(/* container, app */) {\n      Ember.Handlebars.helper(\'time-format\', timeFormat);\n      Ember.Handlebars.helper(\'time-ago-in-words\', timeAgoInWords);\n      Ember.Handlebars.helper(\'day-of-the-week\', dayOfTheWeek);\n      Ember.Handlebars.helper(\'time-ahead-in-words\', timeAheadInWords);\n      Ember.Handlebars.helper(\'time-delta-in-words\', timeDeltaInWords);\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'ember-cli-dates\',\n      initialize: initialize\n    };\n  });//# sourceURL=dummy/initializers/ember-cli-dates.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/day-of-the-week.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/day-of-the-week.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/day-of-the-week.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/day-of-the-week.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-ago-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/time-ago-in-words.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/time-ago-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-ago-in-words.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-ahead-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/time-ahead-in-words.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/time-ahead-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-ahead-in-words.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-delta-in-words.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/time-delta-in-words.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/time-delta-in-words.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-delta-in-words.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/helpers\');\n    test(\'live-reload-middleware/helpers/time-format.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/helpers/time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/helpers/time-format.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/utils/time-locale.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/utils\');\n    test(\'live-reload-middleware/utils/time-locale.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/utils/time-locale.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/utils/time-locale.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/utils/valid-args.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/utils\');\n    test(\'live-reload-middleware/utils/valid-args.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/utils/valid-args.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/utils/valid-args.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function() {\n        return {\n          now: new Date(),\n          lastHour: new Date(new Date().valueOf() - (60*60*1000)),\n          nextHour: new Date(new Date().valueOf() + (60*60*1000))\n        };\n      }\n    });\n  });//# sourceURL=dummy/routes/index.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>ember-cli-dates</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>time-format</h3>\\n<div>\\n  <code>{{time-format now}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-format\'] || (depth0 && depth0[\'time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"now\", options) : helperMissing.call(depth0, \"time-format\", \"now\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{time-format now \'LLL\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-format\'] || (depth0 && depth0[\'time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"now\", \"LLL\", options) : helperMissing.call(depth0, \"time-format\", \"now\", \"LLL\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{time-format now \'LLLL\' \'pt-br\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-format\'] || (depth0 && depth0[\'time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"now\", \"LLLL\", \"pt-br\", options) : helperMissing.call(depth0, \"time-format\", \"now\", \"LLLL\", \"pt-br\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n<h3>time-ago-in-words</h3>\\n<div>\\n  <code>{{time-ago-in-words lastHour}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-ago-in-words\'] || (depth0 && depth0[\'time-ago-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"lastHour\", options) : helperMissing.call(depth0, \"time-ago-in-words\", \"lastHour\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{time-ago-in-words lastHour \'pt-br\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-ago-in-words\'] || (depth0 && depth0[\'time-ago-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"lastHour\", \"pt-br\", options) : helperMissing.call(depth0, \"time-ago-in-words\", \"lastHour\", \"pt-br\", options))));\n      data.buffer.push(\"\\n</div>\\n<h3>day-of-the-week</h3>\\n<div>\\n  <code>{{day-of-the-week now}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'day-of-the-week\'] || (depth0 && depth0[\'day-of-the-week\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"now\", options) : helperMissing.call(depth0, \"day-of-the-week\", \"now\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{day-of-the-week now \'pt-br\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'day-of-the-week\'] || (depth0 && depth0[\'day-of-the-week\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"now\", \"pt-br\", options) : helperMissing.call(depth0, \"day-of-the-week\", \"now\", \"pt-br\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n<h3>time-ahead-in-words</h3>\\n<div>\\n  <code>{{time-ahead-in-words nextHour}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-ahead-in-words\'] || (depth0 && depth0[\'time-ahead-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"nextHour\", options) : helperMissing.call(depth0, \"time-ahead-in-words\", \"nextHour\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{time-ahead-in-words nextHour \'pt-br\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-ahead-in-words\'] || (depth0 && depth0[\'time-ahead-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"nextHour\", \"pt-br\", options) : helperMissing.call(depth0, \"time-ahead-in-words\", \"nextHour\", \"pt-br\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n<h3>time-delta-in-words</h3>\\n<div>\\n  <code>{{time-delta-in-words lastHour}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-delta-in-words\'] || (depth0 && depth0[\'time-delta-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"lastHour\", options) : helperMissing.call(depth0, \"time-delta-in-words\", \"lastHour\", options))));\n      data.buffer.push(\"\\n  <br>\\n  <code>{{time-delta-in-words lastHour \'pt-br\'}}</code>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-delta-in-words\'] || (depth0 && depth0[\'time-delta-in-words\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"lastHour\", \"pt-br\", options) : helperMissing.call(depth0, \"time-delta-in-words\", \"lastHour\", \"pt-br\", options))));\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/index.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/helpers/day-of-the-week-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/helpers\');\n    test(\'dummy/tests/unit/helpers/day-of-the-week-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/helpers/day-of-the-week-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/helpers/day-of-the-week-test.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/helpers/time-ago-in-words-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/helpers\');\n    test(\'dummy/tests/unit/helpers/time-ago-in-words-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/helpers/time-ago-in-words-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/helpers/time-ago-in-words-test.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/helpers/time-ahead-in-words-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/helpers\');\n    test(\'dummy/tests/unit/helpers/time-ahead-in-words-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/helpers/time-ahead-in-words-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/helpers/time-ahead-in-words-test.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/helpers/time-delta-in-words-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/helpers\');\n    test(\'dummy/tests/unit/helpers/time-delta-in-words-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/helpers/time-delta-in-words-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/helpers/time-delta-in-words-test.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/helpers/time-format-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/helpers\');\n    test(\'dummy/tests/unit/helpers/time-format-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/helpers/time-format-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/helpers/time-format-test.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environments/test\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/index.js should pass jshint\', function() { \n      ok(true, \'routes/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/routes/index.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=dummy/tests/test-helper.js");

;eval("define(\"dummy/tests/unit/helpers/day-of-the-week-test\", \n  [\"moment\",\"ember-cli-dates/helpers/day-of-the-week\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moment = __dependency1__[\"default\"];\n    var dayOfTheWeek = __dependency2__.dayOfTheWeek;\n\n    module(\'DayOfTheWeekHelper\');\n\n    moment.locale(\'en\');\n\n    var FAKE_HBS_CONTEXT = {},\n        dateJanuary      = new Date(2014, 0, 1),\n        momentJanuary    = moment(\'2014-01-01\'),\n        literalJanuary   = \'2014/01/01\';\n\n    test(\'one arg (date)\', function() {\n      equal(dayOfTheWeek(dateJanuary, FAKE_HBS_CONTEXT), \'Wednesday\');\n    });\n\n    test(\'one arg (moment)\', function() {\n      equal(dayOfTheWeek(momentJanuary, FAKE_HBS_CONTEXT), \'Wednesday\');\n    });\n\n    test(\'one arg (literal)\', function() {\n      equal(dayOfTheWeek(literalJanuary, FAKE_HBS_CONTEXT), \'Wednesday\');\n    });\n\n    test(\'locale pt-br\', function() {\n      equal(dayOfTheWeek(dateJanuary, \'pt-br\', FAKE_HBS_CONTEXT), \'quarta-feira\');\n    });\n\n    test(\'null date\', function() {\n      equal(dayOfTheWeek(null, FAKE_HBS_CONTEXT), \'\');\n    });\n\n\n    test(\'blank date\', function() {\n      equal(dayOfTheWeek(\' \', FAKE_HBS_CONTEXT), \'\');\n    });\n  });//# sourceURL=dummy/tests/unit/helpers/day-of-the-week-test.js");

;eval("define(\"dummy/tests/unit/helpers/time-ago-in-words-test\", \n  [\"moment\",\"ember-cli-dates/helpers/time-ago-in-words\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moment = __dependency1__[\"default\"];\n    var timeAgoInWords = __dependency2__.timeAgoInWords;\n\n    module(\'TimeAgoInWordsHelper\');\n\n    moment.locale(\'en\');\n\n    var FAKE_HBS_CONTEXT = {},\n        dateYesterday    = new Date(new Date().valueOf() - 1000*3600*24),\n        momentYesterday  = moment().subtract(1, \'days\');\n\n    test(\'one arg (date)\', function() {\n      equal(timeAgoInWords(dateYesterday, FAKE_HBS_CONTEXT), \'a day ago\');\n    });\n\n    test(\'one arg (moment)\', function() {\n      equal(timeAgoInWords(momentYesterday, FAKE_HBS_CONTEXT), \'a day ago\');\n    });\n\n    test(\'locale pt-br\', function() {\n      equal(timeAgoInWords(dateYesterday, \'pt-br\', FAKE_HBS_CONTEXT), \'um dia atrás\');\n    });\n\n    test(\'null date\', function() {\n      equal(timeAgoInWords(null, FAKE_HBS_CONTEXT), \'\');\n    });\n\n\n    test(\'blank date\', function() {\n      equal(timeAgoInWords(\' \', FAKE_HBS_CONTEXT), \'\');\n    });\n  });//# sourceURL=dummy/tests/unit/helpers/time-ago-in-words-test.js");

;eval("define(\"dummy/tests/unit/helpers/time-ahead-in-words-test\", \n  [\"moment\",\"ember-cli-dates/helpers/time-ahead-in-words\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moment = __dependency1__[\"default\"];\n    var timeAheadInWords = __dependency2__.timeAheadInWords;\n\n    module(\'TimeAheadInWordsHelper\');\n\n    moment.locale(\'en\');\n\n    var FAKE_HBS_CONTEXT = {},\n        dateTomorrow     = new Date(new Date().valueOf() + 1000*3600*24),\n        momentTomorrow   = moment().add(1, \'days\');\n\n    test(\'one arg (date)\', function() {\n      equal(timeAheadInWords(dateTomorrow, FAKE_HBS_CONTEXT), \'in a day\');\n    });\n\n    test(\'one arg (moment)\', function() {\n      equal(timeAheadInWords(momentTomorrow, FAKE_HBS_CONTEXT), \'in a day\');\n    });\n\n    test(\'locale pt-br\', function() {\n      equal(timeAheadInWords(dateTomorrow, \'pt-br\', FAKE_HBS_CONTEXT), \'em um dia\');\n    });\n\n    test(\'null date\', function() {\n      equal(timeAheadInWords(null, FAKE_HBS_CONTEXT), \'\');\n    });\n\n\n    test(\'blank date\', function() {\n      equal(timeAheadInWords(\' \', FAKE_HBS_CONTEXT), \'\');\n    });\n  });//# sourceURL=dummy/tests/unit/helpers/time-ahead-in-words-test.js");

;eval("define(\"dummy/tests/unit/helpers/time-delta-in-words-test\", \n  [\"moment\",\"ember-cli-dates/helpers/time-delta-in-words\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moment = __dependency1__[\"default\"];\n    var timeDeltaInWords = __dependency2__.timeDeltaInWords;\n\n    module(\'TimeDeltaInWordsHelper\');\n\n    moment.locale(\'en\');\n\n    var FAKE_HBS_CONTEXT = {},\n        dateYesterday    = new Date(new Date().valueOf() - 1000*3600*24),\n        momentYesterday  = moment().subtract(1, \'days\');\n\n    test(\'one arg (date)\', function() {\n      equal(timeDeltaInWords(dateYesterday, FAKE_HBS_CONTEXT), \'a day ago\');\n    });\n\n    test(\'one arg (moment)\', function() {\n      equal(timeDeltaInWords(momentYesterday, FAKE_HBS_CONTEXT), \'a day ago\');\n    });\n\n    test(\'locale pt-br\', function() {\n      equal(timeDeltaInWords(dateYesterday, \'pt-br\', FAKE_HBS_CONTEXT), \'um dia atrás\');\n    });\n\n    test(\'null date\', function() {\n      equal(timeDeltaInWords(null, FAKE_HBS_CONTEXT), \'\');\n    });\n\n\n    test(\'blank date\', function() {\n      equal(timeDeltaInWords(\' \', FAKE_HBS_CONTEXT), \'\');\n    });\n  });//# sourceURL=dummy/tests/unit/helpers/time-delta-in-words-test.js");

;eval("define(\"dummy/tests/unit/helpers/time-format-test\", \n  [\"moment\",\"ember-cli-dates/helpers/time-format\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var moment = __dependency1__[\"default\"];\n    var timeFormat = __dependency2__.timeFormat;\n\n    module(\'TimeFormatHelper\');\n\n    moment.locale(\'en\');\n\n    var FAKE_HBS_CONTEXT = {},\n        dateJanuary      = new Date(2014, 0, 1),\n        momentJanuary    = moment(\'2014-01-01\'),\n        literalJanuary   = \'2014/01/01\';\n\n    test(\'one arg (date)\', function() {\n      equal(timeFormat(dateJanuary, FAKE_HBS_CONTEXT), \'January 1, 2014\');\n    });\n\n    test(\'one arg (moment)\', function() {\n      equal(timeFormat(momentJanuary, FAKE_HBS_CONTEXT), \'January 1, 2014\');\n    });\n\n    test(\'one arg (literal)\', function() {\n      equal(timeFormat(literalJanuary, FAKE_HBS_CONTEXT), \'January 1, 2014\');\n    });\n\n    test(\'two args (date, format)\', function() {\n      equal(timeFormat(dateJanuary, \'LLL\', FAKE_HBS_CONTEXT), \'January 1, 2014 12:00 AM\');\n    });\n\n    test(\'two args (moment, format)\', function() {\n      equal(timeFormat(momentJanuary, \'LLL\', FAKE_HBS_CONTEXT), \'January 1, 2014 12:00 AM\');\n    });\n\n    test(\'two args (literal, format)\', function() {\n      equal(timeFormat(literalJanuary, \'LLL\', FAKE_HBS_CONTEXT), \'January 1, 2014 12:00 AM\');\n    });\n\n    test(\'locale pt-br\', function() {\n      equal(timeFormat(dateJanuary, \'LL\', \'pt-br\', FAKE_HBS_CONTEXT), \'1 de janeiro de 2014\');\n    });\n\n    test(\'null date\', function() {\n      equal(timeFormat(null, FAKE_HBS_CONTEXT), \'\');\n    });\n\n\n    test(\'blank date\', function() {\n      equal(timeFormat(\' \', FAKE_HBS_CONTEXT), \'\');\n    });\n  });//# sourceURL=dummy/tests/unit/helpers/time-format-test.js");
